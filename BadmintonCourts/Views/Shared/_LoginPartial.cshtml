@using Microsoft.AspNetCore.Identity
@using BadmintonCourts.Areas.Identity.Data

@inject SignInManager<BadmintonCourtsUser> SignInManager
@inject UserManager<BadmintonCourtsUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav d-flex align-items-center">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item me-3">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @(!string.IsNullOrEmpty(user?.FirstName) ? user.FirstName : UserManager.GetUserName(User))!
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="d-flex m-0" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-dark text-white border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item me-3">
            <a class="btn btn-outline-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="btn btn-dark text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
