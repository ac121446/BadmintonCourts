@model PaginatedList<BadmintonCourts.Models.Court>

<div class="container mt-5">
    <h1 class="text-center mb-2">Courts</h1>
    <p class="text-center text-muted mb-5">
        View courts here
    </p>
</div>

<form asp-action="Index" method="get" class="mb-4 d-flex flex-column gap-3">

    <!-- Search Input -->
    <div class="d-flex input-group input-group-lg" style="min-width: 300px;">
        <input type="text" name="SearchString" value="@(ViewData["CurrentFilter"] ?? "")" class="form-control" placeholder="Search courts by name..." aria-label="Search courts" />
        <button type="submit" class="btn btn-primary">Search</button>
        <a class="btn btn-outline-secondary" asp-action="Index">Reset</a>
    </div>

    <!-- Sorting buttons and Create New -->
    <div class="d-flex align-items-center justify-content-between">

        <div>
            <!-- Sorting Buttons -->
            <input type="hidden" name="SearchString" value="@(ViewData["CurrentFilter"] ?? "")" />

            <div class="btn-group btn-group-lg me-3" role="group" aria-label="Court Name sorting">
                <button type="submit" name="sortOrder" value="name_asc" class="btn btn-outline-primary @(ViewData["CurrentSort"]?.ToString() == "name_asc" ? "active" : "")">
                    Court Name ↑
                </button>
                <button type="submit" name="sortOrder" value="name_desc" class="btn btn-outline-primary @(ViewData["CurrentSort"]?.ToString() == "name_desc" ? "active" : "")">
                    Court Name ↓
                </button>
            </div>
        </div>

        <div>
            @if (User.IsInRole("Admin"))
            {
                <a class="btn btn-success btn-lg" asp-action="Create">Create New</a>
            }
        </div>

    </div>

</form>

@if (!Model.Any() && !string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()))
{
    <div class="alert alert-warning" role="alert">
        No results found for Courts named "@ViewData["CurrentFilter"]".
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Court Name
                </th>
                <th>
                    Price
                </th>
                <th>
                    Location Name
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CourtName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location.LocationName)
                    </td>
                    <td>
                        <div class="mt-auto">
                            <a asp-action="Edit" asp-route-id="@item.CourtID" class="btn btn-warning btn-sm ms-1" title="Edit">
                                <i class="bi bi-pencil-square me-1"></i> Edit
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.CourtID" class="btn btn-danger btn-sm ms-1" title="Delete">
                                <i class="bi bi-trash3 me-1"></i> Delete
                            </a>
                            <a asp-action="Details" asp-route-id="@item.CourtID" class="btn btn-info btn-sm ms-1" title="Details">
                                <i class="bi bi-info-circle me-1"></i> Details
                            </a>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.Any())
{
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-searchString="@(ViewData["CurrentFilter"] ?? "")">Previous</a>
            </li>
            <li class="page-item disabled">
                <span class="page-link">
                    Page @Model.PageIndex of @Model.TotalPages
                </span>
            </li>
            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-searchString="@(ViewData["CurrentFilter"] ?? "")">Next</a>
            </li>
        </ul>
    </nav>
}
